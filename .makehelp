Make commands for ginput:

make help: print this help text

make install: install the ginput Python package and its dependencies.
    By default, this will create a conda environment named "ginput-auto-default"
    and install ginput and its dependencies there. This is the preferred
    method, as the package versions are frozen to ensure that ginput
    works correctly. You can change the environment name with the ENV
    argument, i.e. "make install ENV=my-env" will use "my-env" as the
    environment name.

    If you do not have conda installed, the installation will abort. You
    will need to install conda. The recommended way is to install one of
    the Anaconda distributions: https://docs.anaconda.com/anaconda/install/
    Either the full Anaconda or the smaller Miniconda should work.

    Once the install is complete, a "run_ginput.py" script will be
    placed in this directory. Executing it directly (i.e. "./run_ginput.py")
    will automatically use the correct environment without needing to
    activate it.

    Note that this will also try to install manual pages into 
    ~/.local/man/man1. This will allow you to use "man ginput" to see
    the main ginput manpage (along with several other pages for the
    various subcommands). If ~/.local does not exist, it will not
    install these pages, but you can still view them by giving the
    man command the full path to them; they are in the man/build/man
    subdirectory of this repo.

make test:
    Carries out full set of tests on ginput. Requires GEOS-FPIT data from
    2018-01-01 to be placed in ./ginput/testing/test_input_data/geosfp-it/Nv
    (met and chem on eta level files) and ./ginput/testing/test_input_data/geosfp-it/Nx
    (2D data).

make quicktest:
    Carries out quick unit tests on ginput; does not require GEOS-FPIT data.
